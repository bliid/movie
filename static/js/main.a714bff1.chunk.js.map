{"version":3,"sources":["MovieCard.js","MovieList.js","Searchform.js","addForm.js","MovieContainer.js","App.js","serviceWorker.js","index.js"],"names":["MovieCard","props","state","className","src","this","img","name","repeat","val","Component","MovieList","filteredmoviesval","items","filter","movies","searchval","filteredmoviesname","includes","searchName","console","log","search","map","l","Searchform","handleSubmit","bind","handleChange","handleReset","e","setState","target","value","reset","preventDefault","Searchrender","onSubmit","type","onChange","placeholder","min","max","onClick","AddForm","addItem","MovieContainer","item","data","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a714bff1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './MovieCard.css';\r\n\r\nclass MovieCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n \r\n            <div className=\"MovieCard\">\r\n           \r\n                <img src={this.props.img} />\r\n\r\n             <p className='cardP'> {this.props.name} <span className='rating'> {\"*\".repeat(this.props.val)}</span> </p>  \r\n\r\n       \r\n            </div>\r\n\r\n                \r\n     \r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieCard;","\r\nimport React, { Component } from 'react';\r\nimport MovieCard from './MovieCard';\r\nimport './MovieList.css';\r\n\r\nclass MovieList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n     \r\n    }\r\n\r\n   \r\n\r\n    render() { \r\n\r\n        const filteredmoviesval = this.props.items.filter(movies => movies.val > this.props.searchval)\r\n        const filteredmoviesname = this.props.items.filter(movies => movies.name.includes(this.props.searchName))\r\n        return ( \r\n            <div className='MovieList'>\r\n               \r\n                    {console.log(filteredmoviesname)}   \r\n                { this.props.search\r\n                    ?  (\r\n                       <div>\r\n                                                             { this.props.searchval\r\n                                                              ?  (\r\n                                                             <ul className='cardcontent'>{filteredmoviesval.map(l => <li>   <MovieCard name={l.name} img={l.img} val={l.val}/>   </li>)}  </ul>   \r\n                                                              )\r\n                                                            : (\r\n                                                                <ul className='cardcontent'>{filteredmoviesname.map(l => <li>   <MovieCard name={l.name} img={l.img} val={l.val}/>   </li>)}  </ul>   \r\n                                                                  )\r\n                                                                 }\r\n\r\n\r\n\r\n\r\n\r\n                        </div> \r\n                    )\r\n                    : (\r\n                    <div>   <ul className='cardcontent'> {this.props.items.map(l => <li>   <MovieCard name={l.name} img={l.img} val={l.val}/>   </li>)} </ul> </div>\r\n                    )\r\n                }\r\n\r\n            \r\n\r\n                \r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieList;","\r\nimport React, { Component } from 'react';\r\nimport './Searchform.css';\r\n\r\nclass Searchform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({ \r\n            searchName:\"\",\r\n            searchval:\"\",\r\n            search: false,\r\n         })\r\n         this.handleSubmit= this.handleSubmit.bind(this)\r\n         this.handleChange= this.handleChange.bind(this)\r\n         this.handleReset= this.handleReset.bind(this)\r\n      \r\n    }\r\n   \r\n   \r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            search: true,\r\n        })  \r\n    }\r\n    \r\n    handleReset(e){\r\n    \r\n        this.setState({ \r\n            searchName:\"\",\r\n            searchval:\"\",\r\n            search: false,\r\n         })\r\n         this.props.reset(this.state)\r\n    }\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.props.Searchrender(this.state)\r\n        this.setState({\r\n            searchName:\"\",\r\n            searchval:\"\",\r\n            search: false,\r\n        })\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className='Searchform'>\r\n                <form onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" name=\"searchName\" value={this.state.searchName} onChange={this.handleChange} placeholder=\"Movie name\"/>\r\n                <input type=\"number\" name=\"searchval\" min=\"1\" max=\"5\" value={this.state.searchval} onChange={this.handleChange} placeholder=\"Stars\"/> \r\n                <button>Search</button>\r\n                <button onClick={this.handleReset}>Reset</button>\r\n                \r\n                </form>\r\n               \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Searchform;\r\n\r\n","import React, { Component } from 'react';\r\nimport './addForm.css';\r\n\r\nclass AddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({ \r\n            name:\"\",\r\n            img:\"\",\r\n            val:\"\"\r\n\r\n         })\r\n         this.handleSubmit= this.handleSubmit.bind(this)\r\n         this.handleChange= this.handleChange.bind(this)\r\n    }\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })  \r\n    }\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.props.addItem(this.state)\r\n        this.setState({\r\n            name:\"\",\r\n            img:\"\",\r\n            val:\"\"\r\n        })\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className='addForm'>\r\n                <form onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} placeholder=\"Movie name\"/>\r\n                <input type=\"text\" name=\"img\"  value={this.state.img} onChange={this.handleChange} placeholder=\"img Url\"/> \r\n                <input type=\"number\"  min=\"1\" max=\"5\" name=\"val\"  value={this.state.val} onChange={this.handleChange} placeholder=\"Stars\"/> \r\n\r\n                <button>Add</button>\r\n                </form>\r\n               \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddForm;\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport MovieList from './MovieList';\r\nimport Searchform from './Searchform';\r\nimport AddForm from './addForm';\r\nimport './MovieContainer.css';\r\n\r\nclass MovieContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            items: [\r\n            {name: \"movie1\", img:\"https://trailers.apple.com/trailers/disney/mulan/images/poster_2x.jpg\", val:\"5\"},\r\n            {name: \"movie2\", img:\"https://trailers.apple.com/trailers/disney/mulan/images/poster_2x.jpg\", val:\"5\"},\r\n            {name: \"movie3\", img:\"https://trailers.apple.com/trailers/disney/mulan/images/poster_2x.jpg\", val:\"5\" },\r\n            {name: \"movie4\", img:\"https://trailers.apple.com/trailers/disney/mulan/images/poster_2x.jpg\", val:\"4\"},\r\n                    ],\r\n                search: false,\r\n                searchName:\"\",\r\n                searchval:\"\"}\r\n        this.addItem = this.addItem.bind(this)\r\n        this.Searchrender = this.Searchrender.bind(this)\r\n        this.reset = this.reset.bind(this)\r\n    }\r\n    addItem(item){\r\n        this.setState(state => ({\r\n            items: [...state.items, item]\r\n        }))\r\n    }\r\n    Searchrender(data){\r\n        this.setState({\r\n            search: data.search,\r\n            searchName: data.searchName,\r\n            searchval: data.searchval,\r\n        })\r\n    }\r\n    reset(){\r\n        this.setState({\r\n            search: false,\r\n                searchName:\"\",\r\n                searchval:\"\"\r\n        })\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className='MovieContainer'>\r\n                 <Searchform Searchrender={this.Searchrender} reset={this.reset}/>\r\n                <MovieList items={this.state.items} search={this.state.search} searchName={this.state.searchName} searchval={this.state.searchval} />\r\n                <AddForm addItem={this.addItem}/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieContainer;","import React from 'react';\nimport MovieContainer from './MovieContainer';\nimport './App.css';\n\n\nfunction App() {\n  return (\n   <div className='App'>\n    \n     <MovieContainer />\n   </div> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}